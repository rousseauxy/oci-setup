services:
  headscale:
    container_name: headscale
    pull_policy: always
    image: headscale/headscale:v0.25.1
    restart: unless-stopped
    networks:
      - t3_proxy
    volumes:
      - ${DOCKERDIR}/appdata/headscale/config:/etc/headscale
      - ${DOCKERDIR}/appdata/headscale/data:/var/lib/headscale
    environment:
      - TZ=${TZ}
    command: headscale serve
    expose:
      - 8080
      - 9090
    labels:
      traefik.enable: true
      # Configure service and router
      traefik.http.services.headscale.loadbalancer.server.port: 8080
      traefik.http.services.headscale.loadbalancer.server.scheme: http
      traefik.http.routers.headscale.rule: Host(`ts.${DOMAINNAME}`)
      traefik.http.routers.headscale.entrypoints: https
      traefik.http.routers.headscale.tls.certresolver: cloudflare
      traefik.http.routers.headscale.service: headscale
      # Configure CORS middleware if needed
      traefik.http.middlewares.headscale-cors.headers.accesscontrolallowmethods: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
      traefik.http.middlewares.headscale-cors.headers.accesscontrolallowheaders: "*"
      traefik.http.middlewares.headscale-cors.headers.accesscontrolalloworiginlist: "https://hs.${DOMAINNAME}"  # Add other origins if needed
      traefik.http.middlewares.headscale-cors.headers.accesscontrolmaxage: 100
      traefik.http.middlewares.headscale-cors.headers.addvaryheader: true
      traefik.http.routers.headscale.middlewares: headscale-cors
      # UDP ports for DERP, etc
      traefik.udp.services.headscale-udp-41641.loadbalancer.server.port: 41641
      traefik.udp.services.headscale-udp-3478.loadbalancer.server.port: 3478

  headplane:
    container_name: headplane
    image: ghcr.io/tale/headplane:latest
    restart: unless-stopped
    networks:
      - t3_proxy
    volumes:
      - ${DOCKERDIR}/appdata/headscale/config:/etc/headscale
      - ${DOCKERDIR}/appdata/headscale/data:/var/lib/headscale
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      # This is always required for Headplane to work
      COOKIE_SECRET: 'file:///run/secrets/headscale_cookie_secret' # generated by "openssl rand -hex 32"
      HEADSCALE_URL: 'https://hs.${DOMAINNAME}'
      CONFIG_FILE: '/etc/headscale/config.yaml'
      #ACL: '/etc/headscale/acl.hujson'
      HEADSCALE_INTEGRATION: 'docker'
      HEADSCALE_CONTAINER: 'headscale'
      DISABLE_API_KEY_LOGIN: 'true'
      HOST: '0.0.0.0'
      PORT: '3000'
      TZ: $TZ
      ROOT_API_KEY: 'xxxxxxxxxxx' # API key previously generated
    labels:
      traefik.enable: true
      traefik.http.services.headscale-admin.loadbalancer.server.port: 3000
      traefik.http.services.headscale-admin.loadbalancer.server.scheme: http
      traefik.http.routers.headscale-admin.rule: Host(`hs.${DOMAINNAME}`)
      traefik.http.routers.headscale-admin.entrypoints: https
      # Optional part for traefik middlewares; protect the headscale ui interface; access from local lan only
      # - traefik.http.routers.headplane-rtr.middlewares=local-ipwhitelist@file